#
# Copyright 2020, Fernando Lemes da Silva
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '2'
services:
  #
  # Application
  #
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=abc123
      - MYSQL_DATABASE=sample-application
      - MYSQL_USER=user
      - MYSQL_PASSWORD=abc123
  application:
    container_name: application
    image: application
    build:
      context: application
      dockerfile: Dockerfile
    environment:
      - MYSQL_DATABASE=sample-application
      - MYSQL_USER=user
      - MYSQL_PASSWORD=abc123
    links:
      - mysql
  #
  # Interceptor
  #
  haproxy:
    container_name: haproxy
    image: haproxy
    build:
      context: haproxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    links:
      - application
      - syslog
  #
  # Load Generator
  #
  jmeter:
    container_name: jmeter
    image: jmeter
    build:
      context: jmeter
      dockerfile: Dockerfile
    links:
      - haproxy
#    volumes:
#      - ./jmeter_results:/results
  #
  # Kube Owl
  #
  syslog:
    container_name: syslog
    image: syslog
    environment:
      - DETECTOR_URL=http://request-recorder/evaluate
    build:
      context: syslog
      dockerfile: Dockerfile
    links:
      - request-recorder
  request-recorder:
    container_name: request-recorder
    image: request-recorder
    build:
      context: request-recorder
      dockerfile: Dockerfile
    environment:
      - MONGO_URL=mongodb://mongodb:27017/
      - MONGO_DATABASE=haproxy
    links:
      - mongodb
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"

#  detection-service:
#    container_name: detection-service
#    image: detection-service
#    build:
#      context: .
#      dockerfile: detection-service/Dockerfile
#    ports:
#      - "80:80"
