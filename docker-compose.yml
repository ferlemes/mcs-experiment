#
# Copyright 2020, Fernando Lemes da Silva
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '3'
services:
  #
  # Basic resources for microservice integration
  #
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  mongodb:
    container_name: mongodb
    image: mongo:4.0
    ports:
      - "27017:27017"
  redis:
    container_name: redis
    image: redis:6
    ports:
      - "6379:6379"
  #
  # Kube Owl
  #
  log-replay:
    container_name: log-replay
    image: log-replay
    build:
      context: log-replay
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - REPLAY_FILES=/input/anonymous.data
    links:
      - rabbitmq
    volumes:
      - ./log-replay/input:/input
  enrichment:
    container_name: enrichment
    image: enrichment
    build:
      context: enrichment
      dockerfile: Dockerfile
    healthcheck:
      test: curl -f http://localhost/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MONGO_URL=mongodb://mongodb:27017/
    links:
      - mongodb
      - rabbitmq
  anomaly-detector:
    image: anomaly-detector
    build:
      context: anomaly-detector
      dockerfile: Dockerfile
    healthcheck:
      test: curl -f http://localhost/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - MONGO_URL=mongodb://mongodb:27017/
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
    links:
      - mongodb
      - rabbitmq
      - redis
    deploy:
      mode: replicated
      replicas: 1
  anomaly-reporter:
    container_name: anomaly-reporter
    image: anomaly-reporter
    build:
      context: anomaly-reporter
      dockerfile: Dockerfile
    healthcheck:
      test: curl -f http://localhost/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - MONGO_URL=mongodb://mongodb:27017/
    links:
      - mongodb
  tools:
    container_name: tools
    image: tools
    build:
      context: tools
      dockerfile: Dockerfile
    healthcheck:
      test: curl -f http://localhost/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - MONGO_URL=mongodb://mongodb:27017/
    links:
      - mongodb
    volumes:
      - ./tools/output:/output
  archiver:
    container_name: archiver
    image: archiver
    build:
      context: archiver
      dockerfile: Dockerfile
    healthcheck:
      test: curl -f http://localhost/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - MONGO_URL=mongodb://mongodb:27017/
      - ARCHIVE_RECORDS_AFTER=300
      - REMOVE_ARCHIVED_RECORDS=false
      - ARCHIVE_FOLDER=/data/
    links:
      - mongodb
